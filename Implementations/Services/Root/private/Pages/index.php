<?php// This response is ordinary HTML:header('Content-Type: text/html');?><!doctype html><html><head><style>.inputBox{	padding:10px;	font-family: "SourceSansProLight","lucida grande",tahoma,verdana,arial,sans-serif;	border: 1px solid #ffffff;    border-radius: 4px;	width: 300px;	color: #000000;}body{	background:#0194E1;	font-family:"SourceSansProLight","lucida grande",tahoma,verdana,arial,sans-serif;	color:#ffffff;	font-size:1.4em;	margin:0;	border:0;	padding:0;}html{	overflow:auto;	margin:0;	border:0;	padding:0;}@font-face{    font-family:"SourceSansProLight";    src:url("/Font/SourceSansProLight.woff") format('woff');}a:link,a:visited{	color:#ffffff;	text-decoration:none;}.bigButton:hover,.outlineButton:hover,.menu:hover{	cursor:pointer;}.outlineButton,.bigButton{	display:inline-block;	padding:10px;	border:1px solid #ffffff;	border-radius:4px;}.bigButton{	margin-top:10px;}.progressCircle{	width:20px;	height:20px;	border:2px solid #ffffff;	display:inline-block;	border-radius:11px;}.progressLine{	height:0px;	width:100px;	margin-bottom:11px;	display:inline-block;	border:1px solid #ffffff;}</style><!--[If IE]><style>@font-face{    font-family:"SourceSansProLight";    src:url("/Font/SourceSansProLight.eot");}</style><![endif]--></head><body><div style='padding:4%'><div id='progress_bar'></div><div style='padding:2%;'><div id='home'><h1>Hello! What would you like to do?</h1><br>This page provides an easy way to interact with the various OpenTransfr API's.<br><br><li> <a href='javascript:change("entity.create")'>Create a new entity</a></li><li> <a href='javascript:change("commodity.create")'>Create a new commodity</a></i><br><br><span style='font-size:0.8em;'>Note: This uses the API.</span></div><div id='api_screen'></div></div></div><script type='text/javascript' src='/js/util.js'></script><script type='text/javascript'>var API={	Version:1,	Endpoint:'/',	Loading:'Loading - Just a moment..',	AvailableObjects:{}};function findIn(ar,toFind,tidy){	for(var a in toFind){				// Info about the field to find:		var find=toFind[a];				if(typeof find==='object' && find.length){			// It's an array. Find them all:			var r=[];			for(var i=0;i<find.length;i++){				var index=find[i];								if(index==0 && !ar[index]){					break;				}								// This assumes they're all in it if the first one is. 				// (which is what we want, otherwise we'll get strange order problems).				r.push(ar[index]);			}						if(r.length){				return r;			}		}				// The name of the field itself:		var index=find.field?find.field:find;				if(ar[index]){			var result=ar[index];						if(find.delim){								// Result should be an array.				if(typeof result==='string'){					// Split with find.delim:					result=result.split(find.delim);				}								if(find.index){										// Read a particular index.					index=find.index;										if(index<0){						index+=result.length;					}										result=result[index];				}							}						if(tidy){				result=tidyName(result);			}						return result;		}			}		return null;}var addr={'UK':'GB'};function findDetails(domain,done){	whois(domain,function(json){				var result={country:null,name:null,address:null,phone:null};				result.name=findIn(json,["organisation","organization","registrant organization","registrant organisation","registrant"],1);				result.address=findIn(json,[{field:"address",delim:','},{field:"registrant's address",delim:','},["registrant street","registrant city","registrant postal code"]]);				result.phone=findIn(json,["phone","phone number","registrant phone","registrant's phone"]);				var c=findIn(json,["country","registrant country",{field:"registrant's address",index:-1,delim:','}]);				if(c){			if(c.length==2){				// It's the code already. Special case for UK:				if(addr[c]){c=addr[c];}				result.country=c.toUpperCase();			}else{				// Try looking up the country code.				Ajax.request('/ui/country?name='+urlencode(c),function(d){					var json=JSON.parse(d);										if(json && json["code"]){						result.country=json["code"];					}										done(result);				});								return;			}		}				done(result);	});}function tidyName(n){	return n.toLowerCase().replace( /\b\w/g, function (m) {		return m.toUpperCase();	});}function whois(domain,done){	Ajax.request('/ui/whois?query='+domain,function(d){		done(JSON.parse(d));	});}window.hashchange=window.onhashchange=function(){		// Load the hash vars:	urlVariables=loadQueryString(window.location.hash.substring(1));		var s=urlVariables['screen'];		if(!s){s='';}		if(screen!=s){				change(s);			}		var m=urlVariables['section'];		if(m){m=parseInt(m);}else{m=0;}		if(currentMode!=m){				change(m);			}	};// Load the hash variables:var urlVariables={};// The current API screen:var screen='';// The elements:var api_screen=document.getElementById('api_screen');var home=document.getElementById('home');var currentMode=0;// JS and vars for the current page:var Page=null;function change(to){	if(typeof to==='string'){		if(to==screen){			return;		}				screen=to;				// Homepage?		if(screen=='home' || screen==''){			// Yep:			api_screen.innerHTML='';			home.style.display='';		}else{			// Nope - load api now!			home.style.display='none';						// Clear the progress indicator:			Progress.showIndicator();						api_screen.innerHTML='<h1>Loading - We\'ll just be a moment..</h1>';						// Load the content:			Ajax.request('/ui/screens/'+to.replace('.','/'),function(r){								// Write it to api_screen:				api_screen.innerHTML=r;								// Hide/show the modes:				changeMode(0);								// Grab any scripts and eval them now:				var s=api_screen.getElementsByTagName('script');								for(var i=0;i<s.length;i++){					var script=s[i];					eval(script.innerHTML);				}							});					}			}else{		changeMode(to);	}}function changeMode(mode){		window.location.hash="screen="+screen+'&section='+mode;		currentMode=mode;	var i=0;		if(Page && Page.onChangeMode){				Page.onChangeMode(mode);			}		while(true){		var box=document.getElementById(screen+'.'+i);				if(!box){			return;		}				if(i==mode){			box.style.display='';		}else{			box.style.display='none';		}				i++;			}	}function send(){		var endpoint=form['endpoint'].value;		var res=document.getElementById("result");	res.innerHTML=API.Loading;		var json;		if(currentMode==0){			json=form['json'].value;		}else{				if(!currentKey){			res.innerHTML='No private key to sign with! Open the console and call loadKey("hex_of_your_private_key");';			return;		}				var header=form['jws.head'].value;		var phead=form['jws.phead'].value;		var payload=form['jws.payld'].value;		json=jws(header,phead,payload);				console.log(json);			}		Ajax.request(endpoint,function(){		console.log(request.responseText);		res.innerHTML=request.responseText;	},json);	}var Progress={	bar:document.getElementById('progress_bar'),		showIndicator:function(stages,stage){				var progLine='';				if(stages){						progLine='<center>';						for(var i=0;i<stages.length;i++){								if(i!=0){					progLine+='<div class="progressLine"';										progLine+='></div>';				}								progLine+='<div title="'+stages[i]+'" class="progressCircle"';								if(i<stage){					progLine+=' style="background:#21BE68;"';				}else if(i==stage){					progLine+=' style="background:#ffffff;"';				}								progLine+='></div>';							}						progLine+='</center>';				}				Progress.bar.innerHTML=progLine;			}};var Entity={	endpoint:'',	key:null};function loadEntity(endpoint,privHex){	Entity.endpoint=endpoint;	loadKey(privHex);	Entity.key=currentKey;}/** Is the given object an API error?*/function isError(d){		if(d.type){		return true;	}else{		return false;	}	}var Error={	display:function(d){				return "API Errored:<br><br>"+JSON.stringify(d);			}};// Load the hash now:window.hashchange();</script></body></html>