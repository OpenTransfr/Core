<?php/** This file contains functionality which helps build the API index pages.* For example, navigating to /commodity/ displays the available functions.* This is included from ../private/summary.php *//** This is used to display a summary of functions available for a* particular sub-directory. For example, /v1/ itself uses this.*/function buildApiIndex($path,&$results){		global $basePath;		// Scan the sub-directories:	$files = scandir($basePath.$path);		foreach($files as $fileName){				if(strstr($fileName,'.')){			// Ignore all files, . and ..			continue;		}				// The folder is, for example, entity/create.		// We know it's an API function if the folder contains a summary.json file in it.		// Otherwise, we recurse further.				$folder=$path.'/'.$fileName;				if(file_exists($basePath.$folder.'/summary.json')){						if(file_exists($basePath.$folder.'/index.php')){							// API function found! We just add the full folder for now.				// Note that this will be e.g. '/v1/entity/create'				array_push($results['functions'],$folder);							}else{								// Otherwise we have a type definition, such as an error.				array_push($results['types'],$folder);							}					}else{						// Otherwise, we'll try recursing into the folder.			// This happens when e.g. finding API functions for the /v1/ folder itself.			// E.g. folder is something like '/v1/entity'			buildApiIndex($folder,$results);					}			}	}/** Outputs the given data set as JSON.*/function outputIndex($name,&$data){		global $basePath;		echo '"'.$name.'":{';		// Track if we've outputted any yet (so we know when to add commas):	$first=true;	foreach($data as $function){				if($first){			$first=false;		}else{			// Second one onwards - add commas between them:			echo ',';		}				// The path to the summary file is:		$summaryPath=$basePath.$function.'/summary.json';				// Get the summary itself:		$summary=file_get_contents($summaryPath);				// Output the name:		echo '"'.$function.'":';				// Output the summary:		echo $summary;			}		echo '}';	}?>