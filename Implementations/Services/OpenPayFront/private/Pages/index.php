<?php// The expires time (2 months):$expiresTime=time() + 5184000;// Expires header:header('Expires: '.gmdate('D, d M Y H:i:s \G\M\T', $expiresTime));// This response is ordinary HTML:header('Content-Type: text/html');?><!doctype html><html><head><style type='text/css'>@font-face{    font-family:"SourceSansProLight";    src:url("/Font/SourceSansProLight.woff") format('woff');}body{	background:#0194E1;	font-family:"SourceSansProLight","lucida grande",tahoma,verdana;	color:#ffffff;	font-size:1.4em;	margin:0;	border:0;	padding:0;}.btn{	display:inline-block;	padding:10px;	border:1px solid #ffffff;	border-radius:4px;}.inputBox{	padding:10px;	font-family: "SourceSansProLight","lucida grande",tahoma,verdana;	border: 1px solid #ffffff;    border-radius: 4px;	width: 300px;	color: #000000;}a:link,a:visited{	color:#ffffff;	text-decoration:none;}</style><!--[If IE]><style>@font-face{    font-family:"SourceSansProLight";    src:url("/Font/SourceSansProLight.eot");}</style><![endif]--></head><body><script type='text/javascript'>var storage={	ok:false,	webSql:null,	indexed:null,	lgStore:null,	fileSys:null,	idb:null,	storageSize:500*1024,	start:function(d){		if(this.ok){			d();			return;		}		this.ok=true;				var f=localStorage;		if(f!=null){this.lgStore=f;if(d){d();} return;}				var i=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;				if(i){			this.idb=window.IDBTransaction||window.webkitIDBTransaction||window.msIDBTransaction;			var s=i.open("websto",1);			s.onupgradeneeded=function(e){var t=e.target.result;if(!t.objectStoreNames.contains("wbs")){t.createObjectStore("wbs")}};			s.onsuccess=function(e){storage.indexed=e.target.result;if(d){d();}};			return		}				var e=window.requestFileSystem||window.webkitRequestFileSystem;		if(e){			var t=navigator.persistentStorage||navigator.webkitPersistentStorage;			var n=function(t){e(window.PERSISTENT,t,function(e){storage.fileSys=e;if(d){d();}})};			if(t){				t.requestQuota(this.storageSize,n);			}else{				var r=window.storageInfo||window.webkitStorageInfo;				r.requestQuota(window.PERSISTENT,this.storageSize,n);			}						return;		}				var o=window.openDatabase;		if(o){try{var u=o("websto","1","wbs",this.storageSpace);u.transaction(function(e){e.executeSql("create table if not exists sdb(DataKey varchar(200) primary key,DataBlock blob)")},function(e){},function(e){storage.webSql=u;if(d){d();}});return}catch(a){}}				if(f==null){this.lgStore=globalStorage[window.location.hostname];if(d){d();}}	},	read:function(e,t){		if(!storage.ok){			storage.start(function(){storage.read(e,t);});			return;		}		var n=function(n){if(t!=null){t(e,n)}};		var r=function(n){if(t!=null){t(e,null)}};		if(this.fileSys!=null){			this.fileSys.root.getFile(e,{create:false},function(e){e.file(function(e){var t=new FileReader;t.onloadend=function(e){n(this.result)};t.readAsText(e)},r)},r)		}else if(this.indexed!=null){			var i=this.idbTransaction();			var s=i.get(e);			s.onsuccess=function(e){n(s.result)};			s.onerror=r;		}else if(this.webSql!=null){			this.webSql.transaction(function(t){t.executeSql("select DataBlock from sdb where DataKey=?",[e],function(e,t){if(t.rows.length>0){n(t.rows.item(0).DataBlock)}else{r()}})},r);		}else if(this.lgStore!=null){			n(this.lgStore.getItem(e));		}else{			r(null);		}	},	idbTransaction:function(){		var e="readwrite";if(this.idb&&this.idb.READ_WRITE){e=this.idb.READ_WRITE}return this.indexed.transaction(["wbs"],e).objectStore("wbs")	},	write:function(e,t,n){		if(!storage.ok){			storage.start(function(){storage.write(e,t,n);});			return;		}		var r=function(t){if(n!=null){n(e,true)}};var i=function(t){if(n!=null){n(e,false)}};if(t==null||t.length==0){this.remove(e,n);return}if(this.fileSys!=null){this.mkdir(this.fileSys.root,e.split("/"),function(e,n){n.getFile(e,{create:true},function(e){e.createWriter(function(e){e.write(new Blob([t]));r()},i)},i)})}else if(this.indexed!=null){var s=this.idbTransaction();var o=s.put(t,e);o.onsuccess=r;o.onerror=i}else if(this.webSql!=null){this.webSql.transaction(function(n){n.executeSql('replace into sdb(DataKey,DataBlock) values ("'+e+'",?)',[t])},i,r)}else if(this.lgStore!=null){this.lgStore.setItem(e,t);r(null)}else{i(null)}	},	remove:function(e,t){		var n=function(n){if(t!=null){t(e,true)}};var r=function(n){if(t!=null){t(e,false)}};if(this.fileSys!=null){this.fileSys.root.getFile(e,{create:false},function(e){e.remove(n,r)},r)}else if(this.indexed!=null){var i=this.idbTransaction().delete(e);i.onsuccess=n;i.onerror=r}else if(this.webSql!=null){this.webSql.transaction(function(t){t.executeSql('delete from sdb where DataKey="'+e+'"')},r,n)}else if(this.lgStore!=null){this.lgStore.removeItem(e);n(null)}else{r(null)}	},	active:function(){		return this.engine()!=null	},	engine:function(){return this.fileSys||this.indexed||this.webSql||this.lgStor}};function loadQueryString(str){		var vars={};		var set=str.split("&");	for(var i=0;i<set.length;i++){				var pair = set[i].split("=");				var val='';				if(pair.length==2){			val=pair[1];		}				vars[pair[0]]=decodeURIComponent(val);	}		return vars;}var banks={};function loadBanks(d){	storage.read("banks",function(e,v){		if(v){			banks=JSON.parse(v);		}else{			banks={};		}		d();	});}function saveBanks(d){	storage.write("banks",JSON.stringify(banks),d);}var hash=window.location.hash.substring(1);var urlVariables=loadQueryString(hash);function output(msg){	var p=window.parent;	if(p && p.postMessage){		p.postMessage(msg,"*");	}else{		window.location.hash=msg;	}}function pathTo(bank){	return 'https://'+bank.Endpoint+'/v1/pay/#code='+hash+'&gateway=pay.opentrans.fr';}function bankBox(bank){	return '<div style="width:70%;padding:20px;margin:10px;text-align:left;background:#038ad0;"><b>'+bank.Name+'</b><br>https://'+bank.Endpoint+'/</div>';}function urlencode(str){	str=(str+'').toString();	return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/~/g, '%7E');}function request(endpoint,done){	var request = new XMLHttpRequest();	request.open("GET",endpoint);	request.onload = function(){		done(request.responseText,request);	};	request.send();}var itv;var sRes;function goTo(b){	window.top.location=pathTo(b);}function result(ep){	var bank=sRes[ep];	// Cache it:	cache(bank,function(){		// Go there now:		goTo(bank);	});}function bTest(f){	if(itv){clearTimeout(itv);}	itv=setTimeout(function(){		// Name to search is..		var bankName=f.value.trim().toLowerCase();				// We'll put the results in this box:		var res=document.getElementById('bank_list');		res.innerHTML='Searching..';				// Search now!		request("/find/?name="+urlencode(bankName),function(r){			r=JSON.parse(r);			sRes=r;			var content='';			for(var i in r){				var bank=r[i];				content+='<div onmousedown="result(\''+i+'\');">'+bankBox(bank)+'</a>';			}			res.innerHTML=content;		});	},500);}function cache(bank,d){	var ep=bank;	var name="";	if(ep.Name){		name=ep.Name;		ep=ep.Endpoint;	}else{				// Go get the name and call this again:		request("/get/?endpoint="+urlencode(ep),function(r){			r=JSON.parse(r);			if(!r.Name){				d(false);				return;			}			cache({Endpoint:ep,Name:r.Name},d);		});			}		ep=ep.toLowerCase();	var rep=ep.replace(/[^a-z0-9\-\.]+/,'');		if(rep!=ep){		d(false);	}		banks[ep]={Endpoint:ep,Name:name};	saveBanks(d);	}loadBanks(function(){		if(urlVariables['bank']){				// Cache a bank, if it's a safe endpoint.		var ep=urlVariables['bank'];		cache(ep,function(){d();});			}else if(hash!='' && hash.indexOf('=')==-1){		// Hash is a checkout code.				var content='';		var title='';		var c=0;		var first;				for(var i in banks){			var bank=banks[i];			if(c==0){first=bank;}			c++;			content+'<a href="'+pathTo(bank)+'">'+bankBox(bank)+'</a>';		}				if(c==1){			// Insta redirect now:			goTo(first);		}else if(content==''){			title='Hello! We\'ve not seen this device here before';			content='What\'s the name of your bank?<br><br><input class="inputBox" name="bank" placeholder="OpenBank Ltd" onkeyup="bTest(this)"><br><br>'+				'This only works with banks that support OpenTransfr.<br><br><div id="bank_list"></div>';		}else{			title='Hello! Pick the bank you\'d like to use';		}				document.body.innerHTML='<center><h1>'+title+'</h1><br><br><div style="font-size:1.6em;">'+content+'</div></center>';			}});</script></body></html>